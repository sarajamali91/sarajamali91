import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, KFold
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Load the data
data = pd.read_csv("data.csv")

# Extract features (RSS) and target (x, y, z)
X = data.iloc[:, 3:].values
y = data.iloc[:, :3].values

# Normalize features to range [0, 1]
scaler = MinMaxScaler()
X = scaler.fit_transform(X)

# FFMLP
model = Sequential()
model.add(Dense(32, input_dim=X.shape[1], activation='relu'))
model.add(Dense(16, activation='relu'))
model.add(Dense(3, activation='linear'))  # Output layer, 3 units for x, y, and z

# Compile the model
model.compile(loss='mean_squared_error', optimizer='adam')

#5-fold cv
kf = KFold(n_splits=5, shuffle=True, random_state=42)

# Perform cv
for train_index, test_index in kf.split(X):
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]

    # Train
    model.fit(X_train, y_train, epochs=50, batch_size=8, verbose=0)

    # Evaluate 
    loss = model.evaluate(X_test, y_test, verbose=0)
    print("Mean Squared Error on Test Set:", loss)
